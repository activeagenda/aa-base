<?php
/**
 * Utility to apply table changes generated by the s2a generator.
 * 
 * PHP version 5
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2009 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under another license, the
 * contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.5, or subsequent versions as allowed by the RPL, and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the RPL is provided strictly on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY
 * DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR
 * NON-INFRINGEMENT. See the RPL for specific language governing rights and
 * limitations under the RPL.
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2009 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.5
 * @version        SVN: $Revision: 1406 $
 * @last-modified  SVN: $Date: 2009-01-27 07:56:18 +0100 (Wt, 27 sty 2009) $
 */



if(defined('APPLY_TABLE_CHANGES_INCLUDED') && APPLY_TABLE_CHANGES_INCLUDED){
    $module_id = '*';
    $project = $Project;
    print "This is the s2a-apply-table-changes.php utility.\n";
} else {
    $confirmModules = array();
    $module_id = '*';
    if($_SERVER['argc'] > 1){
        $module_id = $_SERVER['argv'][1]; //optional 
    }
    $project = 'active_agenda';
    if($_SERVER['argc'] > 2){
        $project = $_SERVER['argv'][2];
    }

}

//assumes we're in the 's2a' folder 
$site_folder = realpath(dirname($_SERVER['SCRIPT_FILENAME']).'');
$site_folder .= '/'.$project;

//includes
$config_file = $site_folder . '/config.php';
if(!file_exists($config_file)){
    print "Config file not found at $config_file\n";
    exit;
}
$gen_config_file = $site_folder . '/gen-config.php';
if(!file_exists($gen_config_file)){
    print "Config file not found at $gen_config_file\n";
    exit;
}

//get settings
include_once $config_file;
include_once $gen_config_file;
if(!(defined('APPLY_TABLE_CHANGES_INCLUDED') && APPLY_TABLE_CHANGES_INCLUDED)){
    set_include_path(PEAR_PATH . PATH_SEPARATOR . get_include_path());

    /**
    * Defines execution state as 'non-generating command line'.  Several classes and
    * functions behave differently because of this flag.
    */
    DEFINE('EXEC_STATE', 2);
}

include_once INCLUDE_PATH . '/general_util.php';
include_once INCLUDE_PATH . '/parse_util.php';

$mdb2 =& GetMDB2();
$mdb2->loadModule('Manager');
$debug_prefix = 's2a-apply-table-changes:';

$sql_change_files = glob(GEN_LOG_PATH.'/'.$module_id.'_dbChanges.gen');

if(0 == count($sql_change_files)){
    print "No changes found.\n";
} else {
    foreach($sql_change_files as $sql_change_file_path){
        include $sql_change_file_path; //provides $alterations_moduleID, $alterations, $alteration_descriptions

        foreach($alteration_descriptions as $tableName => $field_change_descriptions){
            print "Changes to table $tableName:\n";
            foreach($field_change_descriptions as $fieldName => $field_change_description_array){
                print "     Field $fieldName:\n";
                foreach($field_change_description_array as $field_change_description){
                    print "      * $field_change_description\n";
                }
            }
        }

        if(prompt("Apply these changes?")){
            foreach($alterations as $tableName => $table_alterations){
                $result = $mdb2->manager->alterTable($tableName, $table_alterations, false);

                $errorCodes = mdb2ErrorCheck($result, false, true);
                if(0 != $errorCodes['code']){
                    if(1068 == $errorCodes['native_code']){
                        //drop primary key, then re-do the alterations
                        print "Dropping existing primary key...\n";
                        require_once CLASSES_PATH . '/module.class.php';
                        Index::drop($tableName, 'PRIMARY', true);

                        $result = $mdb2->manager->alterTable($tableName, $table_alterations, false);
                    }
                    mdb2ErrorCheck($result);
                }
                //mdb2ErrorCheck($result);
            }
            print "The changes were applied successfully.\n";
            print "Removing the change file $sql_change_file_path.\n";
            unlink($sql_change_file_path);
            print "OK.\n";

            $confirmModules[$alterations_moduleID] = true;
        } else {
            print "Skipped changes in $sql_change_file_path.\n";
            if(prompt("Keep the file so that changes can be applied later?")){
                print "The changes can be applied by runing this program again.\n";
            } else {
                print "Removing the change file $sql_change_file_path.\n";
                unlink($sql_change_file_path);
                print "OK.\n";
            }
        }
    }
}
print "$debug_prefix Finished.\n\n";
?>
