<?php
/**
 * Template file for generated files (alt. a generated file)
 *
 * PHP version 5
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2009 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under another license, the
 * contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.5, or subsequent versions as allowed by the RPL, and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the RPL is provided strictly on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY
 * DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR
 * NON-INFRINGEMENT. See the RPL for specific language governing rights and
 * limitations under the RPL.
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2009 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.5
 * @version        SVN: $Revision: 1627 $
 * @last-modified  SVN: $Date: 2009-05-11 22:22:15 +0200 (Pn, 11 maj 2009) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:10:{s:14:"OrganizationID";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|Numerical ID to identify the organization within this application";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:14:"OrganizationID";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:4:"Name";O:9:"EditField":18:{s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";s:8:"validate";s:8:"notEmpty";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Name|Name used to identify the organization";s:8:"dataType";s:12:"varchar(128)";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:4:"Name";}s:3:"DBA";O:9:"EditField":18:{s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";s:8:"validate";s:0:"";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"DBA|An alternative name the organization is \'doing business as\' if different from the primary name listed";s:8:"dataType";s:12:"varchar(128)";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:3:"DBA";}s:9:"ShortName";O:9:"EditField":18:{s:4:"size";s:2:"20";s:9:"maxLength";s:2:"20";s:5:"align";s:4:"left";s:8:"validate";s:8:"notEmpty";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Short Name|A short name used to identify the organization";s:8:"dataType";s:11:"varchar(20)";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:9:"ShortName";}s:11:"Description";O:9:"MemoField":19:{s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:8:"validate";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Description|Text description of the organization";s:8:"dataType";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:11:"Description";s:14:"conditionField";N;s:14:"conditionValue";N;}s:7:"Mission";O:9:"MemoField":19:{s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:8:"validate";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Mission|The stated mission of the organization";s:8:"dataType";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:7:"Mission";s:14:"conditionField";N;s:14:"conditionValue";N;}s:3:"URL";O:9:"EditField":18:{s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";s:8:"validate";s:0:"";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"URL|Uniform resource locator of the organization which is usually the organization\'s home page";s:8:"dataType";s:12:"varchar(128)";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:3:"URL";}s:3:"SIC";O:9:"EditField":18:{s:4:"size";s:2:"10";s:9:"maxLength";s:2:"20";s:5:"align";s:4:"left";s:8:"validate";s:0:"";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"S.I.C.|The Standard Industry Classification assigned to the organization by the US Census Bureau";s:8:"dataType";s:11:"varchar(20)";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:3:"SIC";}s:11:"Participant";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:573:"Participant|Whether this organization is a participant in this installation of Active Agenda.  If this box is checked, the organization will be available within all drop down lists where the organization must be a participant. Users of the application can add organizations to the lists by checking this box but listTypes can only be modified from within the specification file for the application prior to the application being parsed. In other words, listTypes are determined by programmers while the list of participants is controlled by this field, by application users";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:11:"Participant";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:8:"Internal";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Internal|Whether this organization is internal to the main organization of this installation of Active Agenda.";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:8:"Internal";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}}');

$hasEditableFields = true;


$skipSaveFields = unserialize('a:1:{i:0;s:14:"OrganizationID";}');


$singularRecordName = gettext("Organization");

//field value array
$data = array(
'OrganizationID' => '',
         'Name' => '',
         'DBA' => '',
         'ShortName' => '',
         'Description' => '',
         'Mission' => '',
         'URL' => '',
         'SIC' => '',
         'Participant' => '',
         'Internal' => ''
);

if(empty($_POST)){
    //pre-populate fields with URL values
    if(0 === $recordID){
        foreach($data as $fieldName=>$value){
            if(isset($_GET[$fieldName])){
                $data[$fieldName] = $_GET[$fieldName];
            }
        }
    }
} else {
    foreach($data as $fieldName=>$value){
        if(isset($_POST[$fieldName])){
            $data[$fieldName] = $_POST[$fieldName];
        }
    }
}

//list of grids
   $grids = array();


/**guidanceGrid**/

$PKField = 'OrganizationID';

$ownerField = 'OrganizationID';


/**disbleGlobalModules**/

//handle any posted grid form


$tabsQSargs = $qsArgs;
unset($tabsQSargs['scr']);
unset($tabsQSargs['gid']);
unset($tabsQSargs['grw']);
$tabsQS = MakeQS($tabsQSargs);
$nextScreen = "Address";
$nextlink = "edit.php?$tabsQS&scr=$nextScreen";
$form_enctype = '';

/**CUSTOM_CODE|init**/

$getSQL = "SELECT 
   `org`.OrganizationID AS OrganizationID,
   `org`.Name AS Name,
   `org`.DBA AS DBA,
   `org`.ShortName AS ShortName,
   `org`.Description AS Description,
   `org`.Mission AS Mission,
   `org`.URL AS URL,
   `org`.SIC AS SIC,
   `org`.Participant AS Participant,
   `org`.Internal AS Internal,
   NULLIF(CONCAT(IFNULL( CAST( `org`.Name AS CHAR ),'')),'') AS RecordLabel
FROM `org`
   
WHERE org._Deleted = 0
   AND `org`.OrganizationID = '/**RecordID**/'
";

$getSQL = TranslateLocalDateSQLFormats($getSQL);

if(!empty($_POST['CloneForm'])){
    $recordID = 0;
}


$screenPhrase = gettext("Form|Edit summary information about an organization");

/*populates screen messages differently depending on whether the record exists in db or not*/
if($recordID != 0) {
    $existing = true;

    $pageTitle = gettext("Organization");

    /**CUSTOM_CODE|before_get**/

    //retrieve record
    /**SQL|GET_BEGIN**/
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);
    /**SQL|GET_END**/

    switch (count($r)){
    case 0:
        trigger_error(gettext("This record does not exist, or could not be found.|Record not found."), E_USER_ERROR);
        break;
    case 1:
        break;
    default:
        trigger_error(gettext("More than one record was found."), E_USER_WARNING);
        break;
    }

    //populate data array, combining POSTed data with DB record:
    //POST data takes precedence
    foreach($r[0] as $fieldName=>$dbValue){
        //(checking for gridnum avoids interference with any posted edit grid)
        if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
            $data[$fieldName] = $_POST[$fieldName];
        } else {
            $data[$fieldName] = $dbValue;
        }
    }


    /**CUSTOM_CODE|get**/
} else {
    //inserting a record
    $existing = false;
    $pageTitle = gettext("Organizations");
    /**CUSTOM_CODE|new**/
}

//check if user has permission to edit record
$allowEdit = $User->CheckEditScreenPermission();
//if not, it terminates and display error msg.

//phrases for field names, in field order
$phrases = array(
   'OrganizationID' => gettext("Record ID|Numerical ID to identify the organization within this application"),
   'Name' => gettext("Name|Name used to identify the organization"),
   'DBA' => gettext("DBA|An alternative name the organization is 'doing business as' if different from the primary name listed"),
   'ShortName' => gettext("Short Name|A short name used to identify the organization"),
   'Description' => gettext("Description|Text description of the organization"),
   'Mission' => gettext("Mission|The stated mission of the organization"),
   'URL' => gettext("URL|Uniform resource locator of the organization which is usually the organization's home page"),
   'SIC' => gettext("S.I.C.|The Standard Industry Classification assigned to the organization by the US Census Bureau"),
   'Participant' => gettext("Participant|Whether this organization is a participant in this installation of Active Agenda.  If this box is checked, the organization will be available within all drop down lists where the organization must be a participant. Users of the application can add organizations to the lists by checking this box but listTypes can only be modified from within the specification file for the application prior to the application being parsed. In other words, listTypes are determined by programmers while the list of participants is controlled by this field, by application users"),
   'Internal' => gettext("Internal|Whether this organization is internal to the main organization of this installation of Active Agenda.")
   );


//if the form was posted by clicking the Save button
if(!empty($_POST['Save'])){
    /**DB_SAVE_BEGIN**/

    /**CUSTOM_CODE|save**/

    //validate submitted data:
    $vMsgs = "";
    $vMsg = Validate($data['Name'], ShortPhrase($phrases['Name']), 'notEmpty', 'varchar(128)');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Name']->invalid = TRUE;
            }
$vMsg = Validate($data['ShortName'], ShortPhrase($phrases['ShortName']), 'notEmpty', 'varchar(20)');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ShortName']->invalid = TRUE;
            }


    if(0 != strlen($vMsgs)){
        //prepend a general error message
        $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
        $vMsgs = nl2br($vMsgs);

        //return error messages
        $messages[] = array('e', $vMsgs);

    } else {
//START   	    
	    $data['Name'] = Normalize($data['Name'], 'notEmpty');
			$data['ShortName'] = Normalize($data['ShortName'], 'notEmpty');
			
//END
        /**CUSTOM_CODE|check_deleted_row_exists**/

        $dh = GetDataHandler($ModuleID);
//        $recordID = $dh->saveRow($data, $recordID, $skipSaveFields);
        $dbRecordID = $dh->saveRow($_POST, $recordID, $skipSaveFields);

        if(false === $dbRecordID){
            $errmsg = gettext("The record has not been saved, because:");
            foreach($dh->errmsg as $err => $id){
                $errmsg .= "\n".$err;
            }
            $errmsg = nl2br($errmsg);
            $messages[] = array('e', $errmsg);
        } else {
            $recordID = $dbRecordID;
        }

        //recreate $nextlink b/c of new record ID when inserting
        $inserted = false;
        if(!$existing){
            $qsArgs['rid'] = $recordID; //pass both to tabs and other links
            $tabsQSargs = $qsArgs;
            unset($tabsQSargs['scr']);
            //$tabsQSargs['rid'] = $recordID;
            $tabsQS = MakeQS($tabsQSargs);
            $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
            if(empty($_POST['KeepNew'])){
                $existing = true;
            } else {
                $recordID = 0;
            }
            $inserted = true;
        }
    }

    /**CUSTOM_CODE|save_end**/
    /**DB_SAVE_END**/

    if(empty($_POST['KeepNew'])){
        if(count($messages) == 0){
            /**-remove_begin-**/
            //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
            $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
            dbErrorCheck($r);
            if(count($r) > 0) {
                foreach($r[0] as $fieldName=>$dbValue){
                    //(checking for gridnum avoids interference with any posted edit grid)
                    if(empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                        $data[$fieldName] = $_POST[$fieldName];
                    } else {
                        $data[$fieldName] = $dbValue;
                    }
                }
            } else {
                $messages[] = array('e', gettext("Error: Empty query result."));
            }
            /**-remove_end-**/
        }
    } else {
        foreach($data as $fieldName => $fieldValue){
            $data[$fieldName] = '';
        }
    }

    //note: assumes all messages up til this point were errors
    if (count($messages) == 0){
        //add success message
        if ($inserted){
            $messages[] = array('m', gettext("The record was added successfully."));
        } else {
            $messages[] = array('m', gettext("The record was updated successfully."));
        }
    }
}
/**SQL|DELETE_BEGIN**/
if(!empty($_POST['Delete'])){

    $dh = GetDataHandler($ModuleID);
    $result = $dh->deleteRow($recordID);

    $deletelink = "list.php?$tabsQS";

    //redirect to list screen
    header("Location:" . $deletelink);
    exit;
}
/**SQL|DELETE_END**/

/**CUSTOM_CODE|after_save**/


if(!empty($_POST['KeepNew'])){
    unset($qsArgs['rid']); //ensures next submit will cause a new record
}

$qs = MakeQS($qsArgs);

//List tab
$tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Organizations"));

//target for FORMs
$targetlink = "edit.php?$qs";

$cloneAsNew = false;
$keepAddNew = false;

//formatting that depends on whether the record exists or not
if($existing){
    //delete button only appears on the first EditScreen.
    $deletelink = 'view.php?$tabsQS&delete=1';
    $cancellink = "view.php?$tabsQS";

    $cloneAsNew = true;

          $tabs['View'] = array( "view.php?scr=View&amp;$tabsQS", gettext("View|View summary information about").' '.gettext("an Organization") );
      $tabs['Form'] = array( "", gettext("Form|Edit summary information about an organization") );
      $tabs['Address'] = array( "edit.php?scr=Address&amp;$tabsQS", gettext("Address|Edit address information for an organization") );
      $tabs['Hierarchy'] = array( "edit.php?scr=Hierarchy&amp;$tabsQS", gettext("Hierarchy|Associate application defaults with an organization") );
      $tabs['SpecialCharacteristics'] = array( "edit.php?scr=SpecialCharacteristics&amp;$tabsQS", gettext("Characteristics|Associate special characteristics with the organization") );
      $tabs['People'] = array( "edit.php?scr=People&amp;$tabsQS", gettext("People|Associate people with an organization") );


} else {
    $deletelink = '';
    $cancellink = "list.php?$tabsQS";

    $keepAddNew = true;

          $tabs['Form'] = array( "", gettext("New Organization") );

}

/**CUSTOM_CODE|form**/

$content = '';
foreach($fields as $key => $field){
    if (!$field->isSubField()){
        $content .= $field->render($data, $phrases);
    }
}

$formProps = array(
    'is_main_form'       => true,
    'delete_button'      => strlen($deletelink) > 0,
    'cancel_link'        => $cancellink,
    'next_screen'        => $nextScreen,
    'form_enctype'       => $form_enctype,
    'module_id'          => $ModuleID,
    'render_buttons'     => $hasEditableFields,
    'clone'              => $cloneAsNew,
    'keep_add_new'       => $keepAddNew,
    'single_record_name' => $singularRecordName
);

$content = renderForm2($content, $targetlink, $formProps);

//insert code to enable calendar controls
/**dateFields**/

/**CUSTOM_CODE|after_form**/

//display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


/**CUSTOM_CODE|after_grids**/

   $recordLabelField = '';
    if(isset($data['RecordLabel'])) {
    $recordLabelField = $data['RecordLabel'];
    }
?>