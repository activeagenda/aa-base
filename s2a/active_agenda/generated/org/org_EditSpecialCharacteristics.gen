<?php
/**
 * Template file for generated files (alt. a generated file)
 *
 * PHP version 5
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2009 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under another license, the
 * contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.5, or subsequent versions as allowed by the RPL, and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the RPL is provided strictly on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY
 * DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR
 * NON-INFRINGEMENT. See the RPL for specific language governing rights and
 * limitations under the RPL.
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2009 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.5
 * @version        SVN: $Revision: 1627 $
 * @last-modified  SVN: $Date: 2009-05-11 22:22:15 +0200 (Pn, 11 maj 2009) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:22:{s:14:"OrganizationID";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|Numerical ID to identify the organization within this application";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:14:"OrganizationID";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:4:"Name";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Name|Name used to identify the organization";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:4:"Name";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:9:"ShortName";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Short Name|A short name used to identify the organization";s:8:"dataType";s:11:"varchar(20)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:9:"ShortName";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:11:"Description";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Description|Text description of the organization";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:11:"Description";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:7:"Mission";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Mission|The stated mission of the organization";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:7:"Mission";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:3:"URL";O:9:"ViewField":21:{s:9:"linkField";s:3:"URL";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"URL|Uniform resource locator of the organization which is usually the organization\'s home page";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:3:"URL";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:18:"ParentOrganization";O:9:"ViewField":21:{s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Parent Organization|The next higher level of an organization on a heirachy";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:18:"ParentOrganization";s:10:"needsReGet";b:0;s:11:"formatField";N;}s:10:"Contractor";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:225:"Contractor|Check this box if this organization is a Contractor. Identifying this organization as a contractor will result in the organization being listed in contractor specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:10:"Contractor";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:8:"Customer";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:202:"Customer|Check this box if this organization is a customer of the company.  Identifying this organization as a customer will result in the organization being listed in list boxes within the loss modules";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:8:"Customer";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:12:"Manufacturer";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:233:"Manufacturer|Check this box if this organization is a manufacturer. Identifying this organization as a manufacturer will result in the organization being listed in manufacturer specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:12:"Manufacturer";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:8:"Supplier";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:217:"Supplier|Check this box if this organization is a supplier. Identifying this organization as a supplier will result in the organization being listed in supplier specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:8:"Supplier";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:15:"InsuranceBroker";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:251:"Insurance Broker|Check this box if this organization is an insurance broker. Identifying this organization as an insurance broker will result in the organization being listed in insurance broker specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:15:"InsuranceBroker";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:16:"InsuranceCarrier";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:255:"Insurance Carrier|Check this box if this organization is an insurance carrier. Identifying this organization as an insurance carrier will result in the organization being listed in insurance carrier specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:16:"InsuranceCarrier";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:9:"Reinsurer";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:261:"Reinsurance Company|Check this box if this organization is a reinsurance company. Identifying this organization as a reinsurance company will result in the organization being listed in reinsurance company specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:9:"Reinsurer";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:15:"MedicalProvider";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:249:"Medical Provider|Check this box if this organization is a medical provider. Identifying this organization as a medical provider will result in the organization being listed in medical provider specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:15:"MedicalProvider";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:7:"LawFirm";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:217:"Law Firm|Check this box if this organization is a law firm. Identifying this organization as a law firm will result in the organization being listed in law firm specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:7:"LawFirm";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:17:"StandardsProvider";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:257:"Standards Provider|Check this box if this organization is a standards provider. Identifying this organization as a standards provider will result in the organization being listed in standards provider specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:17:"StandardsProvider";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:15:"AccreditingBody";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:119:"Accrediting Body|Check this box if this organization grants accreditation for meeting specific performance requirements";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:15:"AccreditingBody";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:16:"DisposalFacility";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:271:"Disposal Facility|Check this box if this organization is a waste disposal facility. Identifying this organization as a waste disposal facility will result in the organization being listed in waste disposal facility specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:16:"DisposalFacility";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:16:"WasteTransporter";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:253:"Waste Transporter|Check this box if this organization is a waste transporter. Identifying this organization as a waste transporter will result in the organization being listed in waste transporter specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:16:"WasteTransporter";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:9:"GovAgency";O:13:"CheckBoxField":19:{s:11:"ShortPhrase";N;s:8:"validate";s:0:"";s:8:"dataType";s:4:"bool";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:253:"Government Agency|Check this box if this organization is a government agency. Identifying this organization as a government agency will result in the organization being listed in government agency specific list boxes throughout this software application";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:12:"defaultValue";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:9:"GovAgency";s:14:"conditionField";N;s:14:"conditionValue";N;s:8:"moduleID";s:3:"org";}s:13:"AgencyLevelID";O:14:"CodeComboField":32:{s:10:"codeTypeID";s:1:"7";s:9:"listField";s:11:"AgencyLevel";s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:16:"CodeTypeID = \'7\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:140:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'7\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:8:"validate";s:0:"";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"org";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:13:"orderByFields";a:0:{}s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Agency Level|The heirarchial level of the agency from an international perspective";s:8:"dataType";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:10:"renderMode";N;s:16:"inlinePreContent";s:0:"";s:17:"inlinePostContent";s:0:"";s:4:"name";s:13:"AgencyLevelID";}}');

$hasEditableFields = true;


$skipSaveFields = unserialize('a:7:{i:0;s:14:"OrganizationID";i:1;s:4:"Name";i:2;s:9:"ShortName";i:3;s:11:"Description";i:4;s:7:"Mission";i:5;s:3:"URL";i:6;s:18:"ParentOrganization";}');


$singularRecordName = gettext("Organization");

//field value array
$data = array(
'OrganizationID' => '',
         'Name' => '',
         'ShortName' => '',
         'Description' => '',
         'Mission' => '',
         'URL' => '',
         'ParentOrganization' => '',
         'Contractor' => '',
         'Customer' => '',
         'Manufacturer' => '',
         'Supplier' => '',
         'InsuranceBroker' => '',
         'InsuranceCarrier' => '',
         'Reinsurer' => '',
         'MedicalProvider' => '',
         'LawFirm' => '',
         'StandardsProvider' => '',
         'AccreditingBody' => '',
         'DisposalFacility' => '',
         'WasteTransporter' => '',
         'GovAgency' => '',
         'AgencyLevelID' => ''
);

if(empty($_POST)){
    //pre-populate fields with URL values
    if(0 === $recordID){
        foreach($data as $fieldName=>$value){
            if(isset($_GET[$fieldName])){
                $data[$fieldName] = $_GET[$fieldName];
            }
        }
    }
} else {
    foreach($data as $fieldName=>$value){
        if(isset($_POST[$fieldName])){
            $data[$fieldName] = $_POST[$fieldName];
        }
    }
}

//list of grids
   $grids = array();


/**guidanceGrid**/

$PKField = 'OrganizationID';

$ownerField = 'OrganizationID';


/**disbleGlobalModules**/

//handle any posted grid form


$tabsQSargs = $qsArgs;
unset($tabsQSargs['scr']);
unset($tabsQSargs['gid']);
unset($tabsQSargs['grw']);
$tabsQS = MakeQS($tabsQSargs);
$nextScreen = "People";
$nextlink = "edit.php?$tabsQS&scr=$nextScreen";
$form_enctype = '';

/**CUSTOM_CODE|init**/

$getSQL = "SELECT 
   `org`.OrganizationID AS OrganizationID,
   `org`.Name AS Name,
   `org`.ShortName AS ShortName,
   `org`.Description AS Description,
   `org`.Mission AS Mission,
   `org`.URL AS URL,
   `org1`.Name AS ParentOrganization,
   `org`.Contractor AS Contractor,
   `org`.Customer AS Customer,
   `org`.Manufacturer AS Manufacturer,
   `org`.Supplier AS Supplier,
   `org`.InsuranceBroker AS InsuranceBroker,
   `org`.InsuranceCarrier AS InsuranceCarrier,
   `org`.Reinsurer AS Reinsurer,
   `org`.MedicalProvider AS MedicalProvider,
   `org`.LawFirm AS LawFirm,
   `org`.StandardsProvider AS StandardsProvider,
   `org`.AccreditingBody AS AccreditingBody,
   `org`.DisposalFacility AS DisposalFacility,
   `org`.WasteTransporter AS WasteTransporter,
   `org`.GovAgency AS GovAgency,
   `cod1`.Description AS AgencyLevel,
   `org`.AgencyLevelID AS AgencyLevelID,
   NULLIF(CONCAT(IFNULL( CAST( `org`.Name AS CHAR ),'')),'') AS RecordLabel
FROM `org`
   LEFT OUTER JOIN `org` AS org1 
   ON (`org`.ParentOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`org`.AgencyLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '7')
WHERE org._Deleted = 0
   AND `org`.OrganizationID = '/**RecordID**/'
";

$getSQL = TranslateLocalDateSQLFormats($getSQL);

if(!empty($_POST['CloneForm'])){
    $recordID = 0;
}


$screenPhrase = gettext("Characteristics|Associate special characteristics with the organization");

/*populates screen messages differently depending on whether the record exists in db or not*/
if($recordID != 0) {
    $existing = true;

    $pageTitle = gettext("Organization");

    /**CUSTOM_CODE|before_get**/

    //retrieve record
    /**SQL|GET_BEGIN**/
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);
    /**SQL|GET_END**/

    switch (count($r)){
    case 0:
        trigger_error(gettext("This record does not exist, or could not be found.|Record not found."), E_USER_ERROR);
        break;
    case 1:
        break;
    default:
        trigger_error(gettext("More than one record was found."), E_USER_WARNING);
        break;
    }

    //populate data array, combining POSTed data with DB record:
    //POST data takes precedence
    foreach($r[0] as $fieldName=>$dbValue){
        //(checking for gridnum avoids interference with any posted edit grid)
        if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
            $data[$fieldName] = $_POST[$fieldName];
        } else {
            $data[$fieldName] = $dbValue;
        }
    }


    /**CUSTOM_CODE|get**/
} else {
    //inserting a record
    $existing = false;
    $pageTitle = gettext("Organizations");
    /**CUSTOM_CODE|new**/
}

//check if user has permission to edit record
$allowEdit = $User->CheckEditScreenPermission();
//if not, it terminates and display error msg.

//phrases for field names, in field order
$phrases = array(
   'OrganizationID' => gettext("Record ID|Numerical ID to identify the organization within this application"),
   'Name' => gettext("Name|Name used to identify the organization"),
   'ShortName' => gettext("Short Name|A short name used to identify the organization"),
   'Description' => gettext("Description|Text description of the organization"),
   'Mission' => gettext("Mission|The stated mission of the organization"),
   'URL' => gettext("URL|Uniform resource locator of the organization which is usually the organization's home page"),
   'ParentOrganization' => gettext("Parent Organization|The next higher level of an organization on a heirachy"),
   'Contractor' => gettext("Contractor|Check this box if this organization is a Contractor. Identifying this organization as a contractor will result in the organization being listed in contractor specific list boxes throughout this software application"),
   'Customer' => gettext("Customer|Check this box if this organization is a customer of the company.  Identifying this organization as a customer will result in the organization being listed in list boxes within the loss modules"),
   'Manufacturer' => gettext("Manufacturer|Check this box if this organization is a manufacturer. Identifying this organization as a manufacturer will result in the organization being listed in manufacturer specific list boxes throughout this software application"),
   'Supplier' => gettext("Supplier|Check this box if this organization is a supplier. Identifying this organization as a supplier will result in the organization being listed in supplier specific list boxes throughout this software application"),
   'InsuranceBroker' => gettext("Insurance Broker|Check this box if this organization is an insurance broker. Identifying this organization as an insurance broker will result in the organization being listed in insurance broker specific list boxes throughout this software application"),
   'InsuranceCarrier' => gettext("Insurance Carrier|Check this box if this organization is an insurance carrier. Identifying this organization as an insurance carrier will result in the organization being listed in insurance carrier specific list boxes throughout this software application"),
   'Reinsurer' => gettext("Reinsurance Company|Check this box if this organization is a reinsurance company. Identifying this organization as a reinsurance company will result in the organization being listed in reinsurance company specific list boxes throughout this software application"),
   'MedicalProvider' => gettext("Medical Provider|Check this box if this organization is a medical provider. Identifying this organization as a medical provider will result in the organization being listed in medical provider specific list boxes throughout this software application"),
   'LawFirm' => gettext("Law Firm|Check this box if this organization is a law firm. Identifying this organization as a law firm will result in the organization being listed in law firm specific list boxes throughout this software application"),
   'StandardsProvider' => gettext("Standards Provider|Check this box if this organization is a standards provider. Identifying this organization as a standards provider will result in the organization being listed in standards provider specific list boxes throughout this software application"),
   'AccreditingBody' => gettext("Accrediting Body|Check this box if this organization grants accreditation for meeting specific performance requirements"),
   'DisposalFacility' => gettext("Disposal Facility|Check this box if this organization is a waste disposal facility. Identifying this organization as a waste disposal facility will result in the organization being listed in waste disposal facility specific list boxes throughout this software application"),
   'WasteTransporter' => gettext("Waste Transporter|Check this box if this organization is a waste transporter. Identifying this organization as a waste transporter will result in the organization being listed in waste transporter specific list boxes throughout this software application"),
   'GovAgency' => gettext("Government Agency|Check this box if this organization is a government agency. Identifying this organization as a government agency will result in the organization being listed in government agency specific list boxes throughout this software application"),
   'AgencyLevelID' => gettext("Agency Level|The heirarchial level of the agency from an international perspective")
   );


//if the form was posted by clicking the Save button
if(!empty($_POST['Save'])){
    /**DB_SAVE_BEGIN**/

    /**CUSTOM_CODE|save**/

    //validate submitted data:
    $vMsgs = "";
    

    if(0 != strlen($vMsgs)){
        //prepend a general error message
        $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
        $vMsgs = nl2br($vMsgs);

        //return error messages
        $messages[] = array('e', $vMsgs);

    } else {
//START   	    
	    
//END
        /**CUSTOM_CODE|check_deleted_row_exists**/

        $dh = GetDataHandler($ModuleID);
//        $recordID = $dh->saveRow($data, $recordID, $skipSaveFields);
        $dbRecordID = $dh->saveRow($_POST, $recordID, $skipSaveFields);

        if(false === $dbRecordID){
            $errmsg = gettext("The record has not been saved, because:");
            foreach($dh->errmsg as $err => $id){
                $errmsg .= "\n".$err;
            }
            $errmsg = nl2br($errmsg);
            $messages[] = array('e', $errmsg);
        } else {
            $recordID = $dbRecordID;
        }

        //recreate $nextlink b/c of new record ID when inserting
        $inserted = false;
        if(!$existing){
            $qsArgs['rid'] = $recordID; //pass both to tabs and other links
            $tabsQSargs = $qsArgs;
            unset($tabsQSargs['scr']);
            //$tabsQSargs['rid'] = $recordID;
            $tabsQS = MakeQS($tabsQSargs);
            $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
            if(empty($_POST['KeepNew'])){
                $existing = true;
            } else {
                $recordID = 0;
            }
            $inserted = true;
        }
    }

    /**CUSTOM_CODE|save_end**/
    /**DB_SAVE_END**/

    if(empty($_POST['KeepNew'])){
        if(count($messages) == 0){
            /**-remove_begin-**/
            //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
            $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
            dbErrorCheck($r);
            if(count($r) > 0) {
                foreach($r[0] as $fieldName=>$dbValue){
                    //(checking for gridnum avoids interference with any posted edit grid)
                    if(empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                        $data[$fieldName] = $_POST[$fieldName];
                    } else {
                        $data[$fieldName] = $dbValue;
                    }
                }
            } else {
                $messages[] = array('e', gettext("Error: Empty query result."));
            }
            /**-remove_end-**/
        }
    } else {
        foreach($data as $fieldName => $fieldValue){
            $data[$fieldName] = '';
        }
    }

    //note: assumes all messages up til this point were errors
    if (count($messages) == 0){
        //add success message
        if ($inserted){
            $messages[] = array('m', gettext("The record was added successfully."));
        } else {
            $messages[] = array('m', gettext("The record was updated successfully."));
        }
    }
}
/**SQL|DELETE_BEGIN**/
if(!empty($_POST['Delete'])){

    $dh = GetDataHandler($ModuleID);
    $result = $dh->deleteRow($recordID);

    $deletelink = "list.php?$tabsQS";

    //redirect to list screen
    header("Location:" . $deletelink);
    exit;
}
/**SQL|DELETE_END**/

/**CUSTOM_CODE|after_save**/


if(!empty($_POST['KeepNew'])){
    unset($qsArgs['rid']); //ensures next submit will cause a new record
}

$qs = MakeQS($qsArgs);

//List tab
$tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Organizations"));

//target for FORMs
$targetlink = "edit.php?$qs";

$cloneAsNew = false;
$keepAddNew = false;

//formatting that depends on whether the record exists or not
if($existing){
    //delete button only appears on the first EditScreen.
    $deletelink = '';
    $cancellink = "view.php?$tabsQS";

    $cloneAsNew = true;

          $tabs['View'] = array( "view.php?scr=View&amp;$tabsQS", gettext("View|View summary information about").' '.gettext("an Organization") );
      $tabs['Form'] = array( "edit.php?scr=Form&amp;$tabsQS", gettext("Form|Edit summary information about an organization") );
      $tabs['Address'] = array( "edit.php?scr=Address&amp;$tabsQS", gettext("Address|Edit address information for an organization") );
      $tabs['Hierarchy'] = array( "edit.php?scr=Hierarchy&amp;$tabsQS", gettext("Hierarchy|Associate application defaults with an organization") );
      $tabs['SpecialCharacteristics'] = array( "", gettext("Characteristics|Associate special characteristics with the organization") );
      $tabs['People'] = array( "edit.php?scr=People&amp;$tabsQS", gettext("People|Associate people with an organization") );


} else {
    $deletelink = '';
    $cancellink = "list.php?$tabsQS";

    $keepAddNew = true;

          $tabs['SpecialCharacteristics'] = array( "", gettext("New Organization") );

}

/**CUSTOM_CODE|form**/

$content = '';
foreach($fields as $key => $field){
    if (!$field->isSubField()){
        $content .= $field->render($data, $phrases);
    }
}

$formProps = array(
    /**is_main_form**/
    'delete_button'      => strlen($deletelink) > 0,
    'cancel_link'        => $cancellink,
    'next_screen'        => $nextScreen,
    'form_enctype'       => $form_enctype,
    'module_id'          => $ModuleID,
    'render_buttons'     => $hasEditableFields,
    'clone'              => $cloneAsNew,
    'keep_add_new'       => $keepAddNew,
    'single_record_name' => $singularRecordName
);

$content = renderForm2($content, $targetlink, $formProps);

//insert code to enable calendar controls
/**dateFields**/

/**CUSTOM_CODE|after_form**/

//display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


/**CUSTOM_CODE|after_grids**/

   $recordLabelField = '';
    if(isset($data['RecordLabel'])) {
    $recordLabelField = $data['RecordLabel'];
    }
?>