<?php
/**
 * Template file for generated files (alt. a generated file)
 *
 * PHP version 5
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2009 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under another license, the
 * contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.5, or subsequent versions as allowed by the RPL, and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the RPL is provided strictly on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND LICENSOR HEREBY
 * DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT, OR
 * NON-INFRINGEMENT. See the RPL for specific language governing rights and
 * limitations under the RPL.
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2009 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.5
 * @version        SVN: $Revision: 1406 $
 * @last-modified  SVN: $Date: 2009-01-27 07:56:18 +0100 (Wt, 27 sty 2009) $
 */

    //list fields, serialized
    $fieldHeaders = array(
        'TransactionRecordID' => gettext("Transaction Record ID|An automatically assigned ID for internal purposes (primary key)"),
        'TransactionID' => gettext("Transaction ID|An automatically assigned ID for internal purposes"),
        'RelatedModule' => gettext("Related Module|The name or title of the module which is associated with the record"),
        'RelatedRecordID' => gettext("Related Record ID|The unique ID of the related record within the related module"),
        'RelatedRecordDescription' => gettext("Record Description|A description of the related record based on a combination of field values assigned from within the related module"),
        'RelatedRecordLink' => gettext("Related Record Link|An internal link to the related record."),
        'Indirect' => gettext("Indirect|Whether this record was updated because of changes in a different module (by a remote field relationship)"),
        'ActionTypeID' => gettext("Action Type ID|The type of action taken: Insert, Update, Delete")
    );

    $fieldTypes = unserialize('a:8:{s:19:"TransactionRecordID";s:6:"bigint";s:13:"TransactionID";s:6:"bigint";s:13:"RelatedModule";s:12:"varchar(128)";s:15:"RelatedRecordID";s:3:"int";s:24:"RelatedRecordDescription";N;s:17:"RelatedRecordLink";s:12:"varchar(128)";s:8:"Indirect";s:4:"bool";s:12:"ActionTypeID";s:7:"tinyint";}');
    $listFields = unserialize('a:8:{i:0;s:19:"TransactionRecordID";i:1;s:13:"TransactionID";i:2;s:13:"RelatedModule";i:3;s:15:"RelatedRecordID";i:4;s:24:"RelatedRecordDescription";i:5;s:17:"RelatedRecordLink";i:6;s:8:"Indirect";i:7;s:12:"ActionTypeID";}');
    $linkFields = unserialize('a:1:{s:24:"RelatedRecordDescription";s:17:"RelatedRecordLink";}');
    $fieldAlign = unserialize('a:8:{s:19:"TransactionRecordID";s:6:"center";s:13:"TransactionID";s:4:"left";s:13:"RelatedModule";s:4:"left";s:15:"RelatedRecordID";s:5:"right";s:24:"RelatedRecordDescription";s:4:"left";s:17:"RelatedRecordLink";s:4:"hide";s:8:"Indirect";s:6:"center";s:12:"ActionTypeID";s:5:"right";}');

?>